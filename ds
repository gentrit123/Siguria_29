import sys
import os
from os import sys

m=sys.argv[1]
def func():
   #Dekriptimi me caesar crypt ne gjuhen programuese python
 def dekriptimi(teksti,qelesi):
   rezultati = ""
   
   #kalimi neper secilin karakter
   for i in range(len(teksti)):
      char = teksti[i]
      ####1
      
      #Enkriptimi i shkronjave te medha
      if(char.isupper()):
         rezultati += chr((ord(char) - int(qelesi) - 65) % 26 + 65)
         
      #Enkriptimi i shkronjave te vogla
      elif(char.islower()):
         rezultati += chr((ord(char) - int(qelesi) - 97) % 26 + 97)
         
      elif(char<chr(65)):
         rezultati += char
         
         
      else:
         rezultati += " "
      
   return rezultati
   
 #E japim tekstin dhe qelesin per 

 teksti = input("Jepni tekstin : ")
 qelesi=input("Jepni qelesin:")
 print("Teksti qe do dekriptohet : " + teksti)
 print("Qelesi : " + str(qelesi))
 print ("Teksti i dekriptuar : " + dekriptimi(teksti,qelesi))
def func0():
    #enkriptimi me caesar crypt ne gjuhen programuese python
 def enkriptimi(teksti,qelesi):
  rezultati = ""
  #kalimi neper secilin karakter te tekstit
  for i in range(len(teksti)):
     char = teksti[i]
     
     #Enkriptimi i shkronjjave te medha , ne ASCII code nga 65
     if(char.isupper()):
        rezultati += chr((ord(char) + int(qelesi)-65) % 26 + 65)
     
     #Enkriptimi i shkronjave te vogla , ne ASCII code nga 97
     elif(char.islower()):
        rezultati += chr((ord(char) + int(qelesi) - 97) % 26 + 97)
     
     #Enkriptimi i simboleve dhe nurave qe mbesin te njejte , ASCII 1-64
     elif(char<chr(65)):
        rezultati+=char
        
     #Ne rast se kemi hapsira ato perfillen
     else:
        rezultati+=" "
     
  return rezultati

 #E japin tekstin dhe qelesi dhe e testojme funksionin
 teksti = input("Jepni tekstin:")
 qelesi = input("Jepni qelesin:")
 print("Teksti qe do enkriptohet : " + teksti)

 print ("Teksti i enkriptuar: " + enkriptimi(teksti,qelesi))

def func1():
 class BealsCipher:
    def __init__(self):
        choose_function = input("Enter e to encode or d to decode:")
        if(choose_function.lower() == 'e'):
            self.encoder()
        elif(choose_function.lower() == 'd'):
            self.decoder()
        else:
            print("Please try again!")
    def encoder(self):
        book = input("Enter text file to use as key:")
        word = input("Enter word to encode:")
        outArray = []
        f = open(book, "r")
        book_characters = list(f.read())
        word_characters = list(word)

        output_array = []
        lastIdx = 0
        for char in word_characters:
            try:
                charidx = book_characters.index(char,lastIdx,len(book_characters) -1)
                lastIdx = charidx
                output_array.append(charidx + 1)
            except ValueError as e:
                charidx = book_characters.index(char,0,lastIdx)
                lastIdx = charidx
                output_array.append(charidx + 1)
        result = ""
        for x in output_array: 

            
          
            
            
    
      




